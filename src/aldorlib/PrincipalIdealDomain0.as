--DEPS:  GcdDomain0 init_List Partial
#include "axiom.as"
import from Boolean;

PrincipalIdealDomain0: Category == GcdDomain0 with {
    --operations
      principalIdeal: List % -> Record(coef:List %,generator:%);
         ++ principalIdeal([f1,...,fn]) returns a record whose
         ++ generator component is a generator of the ideal
         ++ generated by \spad{[f1,...,fn]} whose coef component satisfies
         ++ \spad{generator = sum (input.i * coef.i)}
      expressIdealMember: (List %,%) -> Partial(List %);
         ++ expressIdealMember([f1,...,fn],h) returns a representation
         ++ of h as a linear combination of the fi or "failed" if h
         ++ is not in the ideal generated by the fi.
}